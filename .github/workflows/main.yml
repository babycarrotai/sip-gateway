name: Build

on:
  push:
    branches:
      - "**"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive  # This ensures all submodules are checked out

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'  # Updated to meet react-native@0.80.0 requirements
          cache: 'npm'
          cache-dependency-path: telon-gateway-app/package-lock.json

      - name: Install dependencies
        run: npm ci  # Use npm ci for faster, reliable builds
        working-directory: telon-gateway-app

      - name: Run tests
        run: npm test
        working-directory: telon-gateway-app

  build_android:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive  # Ensure submodules are available

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'  # Updated to meet requirements
          cache: 'npm'
          cache-dependency-path: telon-gateway-app/package-lock.json

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 33  # Updated to a more recent API level
          target: default
          arch: x86_64
          profile: Nexus 6
          script: echo "Generated AVD snapshot for caching."

      - name: Install Android SDK components
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platforms;android-33" "build-tools;33.0.2" "ndk;25.1.8937393"

      - name: Set environment variables
        run: |
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
          echo "NDK_HOME=$ANDROID_HOME/ndk/25.1.8937393" >> $GITHUB_ENV

      - name: Create local.properties
        run: |
          echo "sdk.dir=$ANDROID_HOME" > telon-gateway-app/android/local.properties
          echo "ndk.dir=$ANDROID_HOME/ndk/25.1.8937393" >> telon-gateway-app/android/local.properties

      - name: Check for missing dependencies
        run: |
          # Check if the problematic dependency exists
          if [ ! -d "../react-native-replace-dialer" ]; then
            echo "react-native-replace-dialer not found. This might be a local dependency issue."
            # You might need to create a placeholder or remove this dependency
          fi
        working-directory: telon-gateway-app

      - name: Install Dependencies
        run: |
          # Try to install dependencies, handling the missing local package
          npm ci || (
            echo "npm ci failed, trying to fix package.json issues..."
            # Remove problematic local dependency if it doesn't exist
            if [ ! -d "../react-native-replace-dialer" ]; then
              npm uninstall react-native-replace-dialer || true
            fi
            npm ci
          )
        working-directory: telon-gateway-app

      - name: Make Gradlew executable
        run: chmod +x gradlew
        working-directory: telon-gateway-app/android

      - name: Clean Gradle
        run: ./gradlew clean
        working-directory: telon-gateway-app/android

      - name: Generate React Native Bundle
        run: |
          mkdir -p android/app/build/intermediates/assets/release/
          npx react-native bundle \
            --platform android \
            --dev false \
            --entry-file index.js \
            --bundle-output android/app/build/intermediates/assets/release/index.android.bundle \
            --assets-dest android/app/build/intermediates/res/merged/release/
        working-directory: telon-gateway-app

      - name: Build Android Release
        run: |
          ./gradlew assembleRelease
        working-directory: telon-gateway-app/android
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: telon-gateway-app/android/app/build/outputs/apk/release/app-release.apk

  build_bundle:
    runs-on: ubuntu-latest
    needs: build_android
    if: success()  # Only run if Android build succeeds

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: telon-gateway-app/package-lock.json

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android SDK components
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platforms;android-33" "build-tools;33.0.2"

      - name: Create local.properties
        run: |
          echo "sdk.dir=$ANDROID_HOME" > telon-gateway-app/android/local.properties

      - name: Install Dependencies
        run: |
          npm ci || (
            echo "npm ci failed, trying to fix package.json issues..."
            if [ ! -d "../react-native-replace-dialer" ]; then
              npm uninstall react-native-replace-dialer || true
            fi
            npm ci
          )
        working-directory: telon-gateway-app

      - name: Generate React Native Bundle
        run: |
          mkdir -p android/app/build/intermediates/assets/release/
          npx react-native bundle \
            --platform android \
            --dev false \
            --entry-file index.js \
            --bundle-output android/app/build/intermediates/assets/release/index.android.bundle \
            --assets-dest android/app/build/intermediates/res/merged/release/
        working-directory: telon-gateway-app

      - name: Build Android App Bundle
        run: |
          chmod +x gradlew
          ./gradlew clean
          ./gradlew bundleRelease
        working-directory: telon-gateway-app/android
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-bundle
          path: telon-gateway-app/android/app/build/outputs/bundle/release/app-release.aab
