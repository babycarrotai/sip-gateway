name: Build Telon Gateway APK

on:
  push:
    branches:
      - "**"
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Set up the correct Java and Node.js environments first.
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Node.js v18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      # Step 2: Create the correct directory structure and clone all required repositories.
      # This is the most critical step. It mimics the developer's local setup.
      - name: Clone all sibling repositories
        run: |
          git clone https://github.com/telon-org/react-native-gsm-sip-gateway.git
          git clone https://github.com/telon-org/react-native-tele.git
          git clone https://github.com/telon-org/react-native-sip2.git
          git clone https://github.com/telon-org/react-native-replace-dialer.git

      # Step 3: Install dependencies from within the main app's directory.
      # Yarn will now be able to correctly find the local 'file:../' dependencies.
      - name: Install Yarn Dependencies
        working-directory: ./react-native-gsm-sip-gateway
        run: yarn install

      # Step 4: Build the release APK using the Gradle wrapper.
      - name: Build Android Release APK
        working-directory: ./react-native-gsm-sip-gateway/android
        run: |
          chmod +x gradlew
          ./gradlew assembleRelease

      # Step 5: Upload the finished APK file as a downloadable artifact.
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: gsm-sip-gateway-apk
          path: react-native-gsm-sip-gateway/android/app/build/outputs/apk/release/app-release.apk
