# A clean, modern workflow to build the Android APK
name: Build Android APK

on:
  push:
    branches:
      - "**" # Runs on any push to any branch

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out the repository's code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2. Set up the correct Java version required for modern Android builds
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3. Set up the correct Node.js version (18+) as required by the dependencies
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          # Use caching for yarn to speed up subsequent builds
          cache: 'yarn'

      # 4. Install dependencies using the correct package manager (Yarn)
      - name: Install Yarn Dependencies
        run: yarn install

      # 5. Build the Android APK
      #    - cd into the 'android' directory
      #    - chmod +x gradlew makes sure the Gradle wrapper is executable
      #    - ./gradlew assembleRelease builds the release APK
      - name: Build Android Release APK
        run: |
          cd android
          chmod +x gradlew
          ./gradlew assembleRelease

      # 6. Upload the generated APK as a downloadable artifact
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: gsm-sip-gateway-apk
          path: android/app/build/outputs/apk/release/app-release.apk```

6.  Click the green **"Commit changes..."** button to save the file.

This will replace your old, broken workflow with the new, correct one. Go to the "Actions" tab to watch it run. It should now succeed and produce the downloadable APK file you need.
